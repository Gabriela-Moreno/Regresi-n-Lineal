## TAREA 1  
datos<-c(1,2,3,4,5,6,7,8,9,10,0,0,2,11,7,16,9,0,12,4,1.72,4.38,4.06,1.26,5.31,.57,3.37,3.44,.74,1.24,1.88,5.93,5.54,2.67,6.53,.74,4.94,4.89,.69,1.42)
ma<- matrix(datos, ncol= 10, byrow = T)
nomfila<-c("MOTOR", "EDAD", "LINEA DE BASE", "REFORMULADA")
dimnames(ma)<- list(nomfila)
ma

EDAD <- c(0,0,2,11,7,16,9,0,12,4)
LDB <- c(1.72,4.38,4.06,1.26,5.31,.57,3.37,3.44,.74,1.24)
REF <- c(1.88,5.93,5.54,2.67,6.53,.74,4.94,4.89,.69,1.42)

plot(EDAD,LDB)
plot(EDAD,REF)

## PRACTICA 2

A <- c(132,129,120,113.2,105,92,84,83.2,88.4,59,80,81.5,71,69.2)
B <- c(46,48,51,52.1,54,52,59,58.7,61.6,64,61.4,54.6,58.8,58)
plot(A,B)
        #mio
##Suma_xi_al_cuadrado<-sum(A^2)
#Suma_al_cuadrado<-sum(A)^2
#Sxx<-Suma_xi_al_cuadrado- Suma_al_cuadrado/14
       
       #del maestro
sxx = sum((A-mean(A))^2)
sxy = sum ((A-mean(A))*(B-mean(B)))

b1 = (sxy)/(sxx)          
b0<- mean(B)-b1*mean(A) 
b0~X
#CON LA FUNCIÓN LM(Y~X)
lm(B~A)

#Con los datos anteriores calcular el valor de y cuando PRACTICA 3
#x*=40

y<-b0-b1*(70)
plot(y,col="pink")
y<-b0-b1*(40)
plot(y,col="purple")
y<-b0-b1*(55)
plot(y,col="grey")

require(ggplot2)
#graficar los datos anteruires con ina recta, con ggplot2 y qplot(x,y...) 
rr<-predict(nod1)
qplot(B,A
      geon=c("point"),
      )



                                #Practica Lunes 26 de agosto
                                
                                

x<-c(125.3,98.2,201.4,147.3,145.9,124.7,112.2,120.2,161.2,178.9,159.5,145.8,75.1,151.4,144.2,125,198.8,132.5,159.6,110.7)
y<-c(77.9,76.8,81.5,79.8,78.2,78.3,77.5,77.0,80.1,80.2,79.9,79,76.7,78.2,79.5,78.1,81.5,77,79,78.6)


sxx = sum((x-mean(x))^2)
sxy = sum ((x-mean(x))*(y-mean(y)))

b1 = (sxy)/(sxx)          
b0<- mean(y)-b1*mean(x) 
b0~X

#PARA LAS YS CON GORRITO

Y1=b0+b1*(125.3)
Y2=b0+b1*(98.2)
Y3=b0+b1*(201.4)
Y4=b0+b1*(147.3)


#PARA EL RESIDUO 
R1=-Y1+125.3
R2= -Y2+76.8    #LOS RESIDUOS NEGATIVOS SON LOS QUE ESTAN POR DEBAJO DE LA RECTA 
R3=-Y3+81.5



##DECLARAR TODO EN VECTOR PARA NO HACER UNO POR UNO, aunque no agarra tantos decimales 

Vector_Ys_Gorrito<-b0+b1*(x)
Residuo<-y-Vector_Ys_Gorrito

Vector_Ys_Gorrito
Residuo


#si queremos redondear para tener todo uniforme 

round(Vector_Ys_Gorrito,2)

#require(ggplot2)
#plot(Residuo)


##Sacar la variacion estandar

  SSE=sum((y-Vector_Ys_Gorrito)^2)
  Desv_Est= SSE/(18)


##GRAFICAR Y 
  
require(ggplot2)
plot(x,y)

recta<-lm(Vector_Ys_Gorrito~x)
abline(recta)


##Los datos se ajustan a la recta


#CODIGO 4 SEPTIEMBRE MIÉRCOLES

x <- c(42.2,42.6,43.3,43.5,43.7,44.1,44.9,45.3,45.7,45.7,45.9,46,46.2,46.2,46.8,46.8,47.1,47.2)
y <- c(44,44,44,45,45,46,46,46,47,48,48,48,47,48,48,49,49,49)

mod1 <- lm(y~x)
summary(mod1)

##   x =   b1  ,   Sb1,     valor de t      ,    valor de p        
## Nuestra H0 : B1 = 0, ya que el valor de p < .05, rechazamos H0 y aceptamos la alternativa
## p es significativa, se puede inferir


#Signif codes: casi 100% de confianza porque es casi igual cero 
install.packages("ggplot2")
require(ggplot2)
mod1 <- lm(y~x)
zz <- predict(mod1)  ## Predict = Recta ajustada  x^ ó y^
zz
aa <- round(mod1$coefficients[1],2)
bb <- round(mod1$coefficients[1],2)
mod1$coefficients

qplot(x,y,
      main= "Gráfica Regresión", ylab= "Velocidad 1",
      xlab= "Velocidad 2",
      geom=c("point"),
      method="lm") + geom_line(aes(y=zz), lwd=1.2, color=4) +
  geom_text(x = 46, y = 49, aes(label= paste ("y", "=", aa, "+", bb, "*", "b0")))


## JUEVES 5 DE SEPTIEMBRE


#Pruebas de hipótesis
#H0=    B1=0        (se rechaza dado el p value)
#H1=    B1 es desigual de 0       (se acepta)

#La prueba de utilidad que se plantea para el modelo de regresion simple se define el 
#valor del estadistico de prueba como el cociente t


    #t=B1(gorrito)/S de B1(gorrito)


x<-c(42.2,42.6,43.3,43.5,43.7,44.1,44.9,45.3,45.7,45.7,45.9,46,46.2,46.2,46.8,46.8,47.1,47.2)
y<-c(44,44,44,45,45,46,46,46,47,48,48,48,47,48,48,49,49,49)


#sxx = sum((x-mean(x))^2)
#sxy = sum ((x-mean(x))*(y-mean(y)))
#b1 = (sxy)/(sxx)     
#para ya no hacer paso a paso 

mod1<-lm(y~x)
summary(mod1)

#entonces 
#El valor de t es el "t value"" 
#t=(b1 gorrito)/ S (de Bi gorrito)

#t=(1.08342)/(0.07086)
#t=13.88
#se ve en la consola que saca todos los datos 
#el p value tiene que ser menor igual a .05 para rechazar H0.... el p value
#si es menor por muucho


ypro<- predict(mod1)  #recta ajustada, predict da los valores de la recta
ypro

bo<- round(mod1$coefficients[1],2) #redondear 
bi<-round(mod1$coefficients[2],2)

mod1$coefficients
b0
install.packages(ggplot2)
require(ggplot2)

qplot(x,y,
        main="grafica regresion", ylab="velocidad1",
        xlab="Velocidad2", geom=c("point"),
        method=("lm") + geom_line(aes(y=ypro)), lwd=.2, color=4) +
        geom_text(x=46, y=49, aes(label=paste("y", "=",bo,"+",b1,"*","x")))

        #ejercicio 
# Para perforar pozos de petroleo los componentes de ensamble se pueden romper
# y=umbral de tension
#limite elastico


x<-c(635,644,711,708,836,820,810,870,856,923,878,937,948)
y<-c(100,93,88,84,77,75,74,63,57,55,47,43,38)


sxx = sum((x-mean(x))^2)
sxy = sum((x-mean(x))*(y-mean(y)))
b1=(sxy)/(sxx)
b0 <- mean (y)-(b1*mean(x))
y6=b0+b1*x
y6
residuo = y-y6
residuo
round(residuo, digits = 2)
plot(x,y)
recta <- lm(y~x)
abline(lsfit(x,y))
residuoscuadrados <- residuo^2
sum(residuoscuadrados)
sumar2 <- sum(residuoscuadrados) ##SSE##
sigma = sumar2/(13-2)
varianza = sqrt(sigma)
SST = sum ((y-mean(y))^2)
###sumar2= SSE
r2 = (1 - (sumar2/SST))
summary(recta)
##intervalo ->>##
##para Sb1^
sb1=varianza/(sqrt(sxx))
##s cuadrado
s2= sumar2/(10-2) ##esta linea es igual a sigma que es la desv. estándar
##intervalos con la tabla t-student t alfa/2, n-2
inferior = b1 - (2.2010*sb1)
superior = b1 + (2.2010*sb1)
MOD <- lm(y~x)
summary(MOD)

## con el siguiente intervalo [-.216063, -.135206] nuestra modelo de regresion es mas confiable 
## ajusta mejor nuestra recta





   ####################23 septiembre 2019

#Muestras de 9 personas con datos de edad y presion....
x<-c(54,40,70,35,62,45,55,50,38)
y<-c(148,123,155,115,150,126,152,144,114)

mod1 <- lm(y~x)
summary(mod1)
#la relacion indica que la precision sanguinea incrementa en promedio 1.3 unidades por cada
#año de edad que incrementa la persona



          #  ejemplo 2
x1<-c(25,46,58,37,55,32,41,50,23,60)
y1<-c(18,12,8,15,10,13,7,9,16,6)

#HIPOTESIS: Entre mas edad menos ausentismo en el trabajo

mod1 <- lm(y1~x1)
summary(mod1)

        

         # Ejemplo 3
x2<- c(12,8,10,13,9,14,11,18,12,10,12,14,9,10,15,12,11,12,11,10,14,13,10,12,13,12,16,15)
y2<-c(15,10,12,14,12,15,16,20,14,12,10,16,11,13,17,15,12,13,12,13,12,14,13,15,14,13,18,17)

#Hipótesis: a mayor calificacion parcial, mayor calificacion final

mod1 <- lm(y2~x2)
summary(mod1)

#La relacion indica que la calif. final aumenta en promedio .84 por cada unidad que aumenta la calif parcial



                    ##EJERCICIO##
#Relacion ingreso(variable indep)(x) -consumo(variable dependiente)(y) familiar

x<-c(119,85,97,95,120,92,105,110,98,98,81,81,91,105,100,107,82,84,100,108)
y<-c(154,123,125,130,151,131,141,141,130,134,115,117,123,144,137,140,123,115,134,147)

#Hipótesis= Entre mayor ingreso, mayor es el consumo de las personas


mod1 <- lm(y~x)
summary(mod1)

#El consumo de las personas aumenta en un promedio de .94252 pesos 
#en relación al aumento del ingreso en una unidad 



###################################   REGRESION MULTIPLE #############################
## 17 DE OCTUBRE 2019 ##

#Experimento realizado para conocer el impacto de las sig. variables 
# X1= fuerza (gm)
#X2= potencia (mW)
#X3= temperatura (C) 
#x4= tiempo (ms)
#y= resistencia (gm)


X1<-c (30,40,30,40,30,40,30,40,30,40,30,40,30,40,30,40,25,45,35,35,35,35,35,35,35,35,35,35,35,35)
X2<-c(60,60,90,90,60,60,90,90,60,60,90,90,60,60,90,90,75,75,45,105,75,75,75,75,75,75,75,75,75,75)
X3<-c(175,175,175,175,225,225,225,225,175,175,175,175,225,225,225,225,200,200,200,200,150,250,200,200,200,200,200,200,200,200)
X4<-c(15,15,15,15,15,15,15,15,25,25,25,25,25,25,25,25,20,20,20,20,20,20,10,30,20,20,20,20,20,20)
y<-c(26.2,26.3,39.8,39.7,38.6,35.5,48.8,37.8,26.6,23.4,38.6,52.1,39.5,32.3,43,56,35.2,46.9,22.7,58.7,34.5,44,35.7,41.8,36.5,37.6,40.3,46,27.8,40.3)


a<-lm(y~(X1+X2+X3+X4))
summary(a)


#B0= -37.48
#B1= 0.2117
#B2= .4983
#B3= .1296
#B4=.25833


###################################### 21 octubre 
X1<-c(21,21,7,7,28,0,14,14,14)
X2<-c(.65,.55,.65,.55,.60,.60,.70,.50,.60)
y<-c(33.55,47.55,35,35.9,40.9,39.1,31.55,48,42.3)


a<-lm(y~(X1+X2))
summary(a)


####Calcular Y gorrito cuando X1=14    X2=6
 Y<- 84.81+0.1643*(X1)-79.667*(X2)


############################# 30 octubre ####################

x1<-c(0,20,0,20,40,0,5,10,15,20,0,0,0,0,20,20,20,20)
x2<-c(0,0,1,1,1,5,5,5,5,5,0,1,3,5,0,1,3,5)
y<-c(6.1,7.5,6.2,7.6,8.6,6.1,6.4,6.7,6.9,7.2,6.1,6.2,6.1,6.1,7.5,7.6,7.2,7.2)
  


mod=lm(y~x1+x2)
summary(mod)

#####ESTIMACION PUNTUAL

yg<-(6.227686)+(0.061823)*(20)+(-0.038721)*(1)

R<- sqrt(yg)


                            ####PARA LOS IC

###PARA SACAR EL VALOR DE T

qt(p=.95+.05/2,df=15,lower.tail = T)

###PARA SACAR LA DESV. EST.

sY<-0.0332






